# Release a tagged version of the '@elastic/opentelemetry-node' package.
name: release

# Primarily this workflow is about doing a release for a *tag*. However, this is
# also run for pushes to "main" to (a) go through some of the motions for
# testing, and (b) publishing the Docker image with an "edge" label.
on:
  push:
    tags:
      - v*.*.*
    branches:
      - main
    paths:
      - 'packages/opentelemetry-node/**'
      - '.github/workflows/release.yml'

permissions:
  attestations: write
  contents: write
  pull-requests: read
  id-token: write # Required for OIDC and provenance (npm publish)

jobs:
  release:
    runs-on: ubuntu-24.04
    env:
      DOCKER_IMAGE_NAME: docker.elastic.co/observability/elastic-otel-node
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v6
        with:
          # Require npm 11.5.1 or later for https://docs.npmjs.com/trusted-publishers.
          node-version: 'v24.8.0'
          registry-url: 'https://registry.npmjs.org'

      # Setup a Docker "buildx" builder container, used by "build-push-action"
      # below for multi-platform image builds. Notes on multi-platform images:
      # https://github.com/elastic/apm-agent-nodejs/issues/4038#issuecomment-2130406402
      - uses: docker/setup-buildx-action@v3

      - name: Log in to the Elastic Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: docker-meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f  # v5.8.0
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            # "1.2.3" and "latest" Docker tags on push of git tag "v1.2.3"
            type=semver,pattern={{version}}
            # "edge" Docker tag on git push to default branch
            type=edge
          labels: |
            org.opencontainers.image.vendor=Elastic
            org.opencontainers.image.title=elastic-otel-node
            org.opencontainers.image.description=Elastic Distribution of OpenTelemetry Node.js

      - name: Build and Push Docker Image
        id: docker-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: 'packages/opentelemetry-node/Dockerfile'
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

      - name: Attest Docker image
        uses: actions/attest-build-provenance@0b6e9809265278d02c58acf52849a95818a5a306  # v2.4.0
        with:
          subject-name: "${{ env.DOCKER_IMAGE_NAME }}"
          subject-digest: ${{ steps.docker-push.outputs.digest }}
          push-to-registry: true

      - name: npm publish (only for tag releases)
        if: startsWith(github.ref, 'refs/tags')
        working-directory: ./packages/opentelemetry-node
        # https://docs.npmjs.com/trusted-publishers
        run: npm publish

      - name: GitHub release (only for tag releases)
        if: startsWith(github.ref, 'refs/tags')
        run: |
          npm ci --ignore-scripts  # need top-level devDeps for github-release.sh script
          ./scripts/github-release.sh "packages/opentelemetry-node" "${{ github.ref_name }}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Notify in Slack
        # Only notify on failure, because on success the published GitHub
        # Release will result in a notification from the GitHub Slack app
        # (assuming '/github subscribe elastic/elastic-otel-node').
        if: ${{ failure() }}
        uses: elastic/oblt-actions/slack/notify-result@v1.16.0
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "#apm-agent-node"
          message: '[${{ github.repository }}] Release `@elastic/opentelemetry-node` *${{ github.ref_name }}*'
