#!/usr/bin/env node

/*
 * Copyright Elasticsearch B.V. and contributors
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * Decode OpAMP `AgentToServer` binary data and print to stdout.
 * This will skip over an HTTP header block, so it can be used to pipe from
 * `curl -i` or similar.
 *
 * Usage:
 *      cat request-body.bin | ./scripts/AgentToServer
 *      ./scripts/AgentToServer request-body.bin
 */

const fs = require('fs');

const {fromBinary} = require('@bufbuild/protobuf');

const {AgentToServerSchema} = require('../lib/generated/opamp_pb.js');

async function slurpStdin() {
    return new Promise((resolve, reject) => {
        const chunks = [];
        process.stdin.on('data', (chunk) => {
            chunks.push(chunk);
        });
        process.stdin.on('end', function () {
            resolve(Buffer.concat(chunks));
        });
        process.stdin.on('error', reject);
    });
}

async function main() {
    let content;
    if (process.argv.length > 2) {
        content = fs.readFileSync(process.argv[2]);
    } else {
        content = await slurpStdin();
    }
    const a2s = fromBinary(AgentToServerSchema, content);
    console.dir(a2s, {depth: 50});
}

main();
