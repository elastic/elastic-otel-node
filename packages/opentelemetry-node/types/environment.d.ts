/**
 * <T>
 */
export type EnvValue<T> = T extends OtelEnvKey ? OtelEnv[T] : T extends EdotEnvKey ? EdotEnv[T] : never;
export type EdotEnv = {
    OTEL_NODE_RESOURCE_DETECTORS: string[];
    OTEL_METRIC_EXPORT_INTERVAL: number;
    OTEL_METRIC_EXPORT_TIMEOUT: number;
    ELASTIC_OTEL_METRICS_DISABLED: boolean;
};
export type EdotEnvKey = keyof EdotEnv;
export type OtelEnv = import('@opentelemetry/core').ENVIRONMENT;
export type OtelEnvKey = keyof OtelEnv;
/**
 * This funtion makes necessari changes to the environment so:
 * - Avoid OTEL's NodeSDK known warnings (eg. OTEL_TRACES_EXPORTER not set)
 * - Fix some issues not solved yet in OTEL (https://github.com/open-telemetry/opentelemetry-js/issues/4447)
 * - Others ...
 */
export function setupEnvironment(): void;
/**
 * Restores any value stashed in the setup process
 */
export function restoreEnvironment(): void;
/**
 * @template T
 * @typedef {T extends OtelEnvKey ? OtelEnv[T] : T extends EdotEnvKey ? EdotEnv[T] : never} EnvValue<T>
 */
/**
 * @template {OtelEnvKey | EdotEnvKey} T
 * Returns the value of the env var already parsed to the proper type. If
 * the variable is not defined it will return the default value based on
 * the environmment variables spec https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/
 * @param {T} name
 * @returns {EnvValue<T>}
 */
export function getEnvVar<T extends "OTEL_TRACES_EXPORTER" | "OTEL_LOG_LEVEL" | "OTEL_SDK_DISABLED" | "OTEL_BSP_EXPORT_TIMEOUT" | "OTEL_BSP_MAX_EXPORT_BATCH_SIZE" | "OTEL_BSP_MAX_QUEUE_SIZE" | "OTEL_BSP_SCHEDULE_DELAY" | "OTEL_BLRP_EXPORT_TIMEOUT" | "OTEL_BLRP_MAX_EXPORT_BATCH_SIZE" | "OTEL_BLRP_MAX_QUEUE_SIZE" | "OTEL_BLRP_SCHEDULE_DELAY" | "OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT" | "OTEL_ATTRIBUTE_COUNT_LIMIT" | "OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT" | "OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT" | "OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT" | "OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT" | "OTEL_SPAN_EVENT_COUNT_LIMIT" | "OTEL_SPAN_LINK_COUNT_LIMIT" | "OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT" | "OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT" | "OTEL_EXPORTER_OTLP_TIMEOUT" | "OTEL_EXPORTER_OTLP_TRACES_TIMEOUT" | "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT" | "OTEL_EXPORTER_OTLP_LOGS_TIMEOUT" | "OTEL_EXPORTER_JAEGER_AGENT_PORT" | "OTEL_NO_PATCH_MODULES" | "OTEL_PROPAGATORS" | "OTEL_SEMCONV_STABILITY_OPT_IN" | "CONTAINER_NAME" | "ECS_CONTAINER_METADATA_URI_V4" | "ECS_CONTAINER_METADATA_URI" | "HOSTNAME" | "KUBERNETES_SERVICE_HOST" | "NAMESPACE" | "OTEL_EXPORTER_JAEGER_AGENT_HOST" | "OTEL_EXPORTER_JAEGER_ENDPOINT" | "OTEL_EXPORTER_JAEGER_PASSWORD" | "OTEL_EXPORTER_JAEGER_USER" | "OTEL_EXPORTER_OTLP_ENDPOINT" | "OTEL_EXPORTER_OTLP_TRACES_ENDPOINT" | "OTEL_EXPORTER_OTLP_METRICS_ENDPOINT" | "OTEL_EXPORTER_OTLP_LOGS_ENDPOINT" | "OTEL_EXPORTER_OTLP_HEADERS" | "OTEL_EXPORTER_OTLP_TRACES_HEADERS" | "OTEL_EXPORTER_OTLP_METRICS_HEADERS" | "OTEL_EXPORTER_OTLP_LOGS_HEADERS" | "OTEL_EXPORTER_ZIPKIN_ENDPOINT" | "OTEL_RESOURCE_ATTRIBUTES" | "OTEL_SERVICE_NAME" | "OTEL_TRACES_SAMPLER_ARG" | "OTEL_TRACES_SAMPLER" | "OTEL_LOGS_EXPORTER" | "OTEL_EXPORTER_OTLP_INSECURE" | "OTEL_EXPORTER_OTLP_TRACES_INSECURE" | "OTEL_EXPORTER_OTLP_METRICS_INSECURE" | "OTEL_EXPORTER_OTLP_LOGS_INSECURE" | "OTEL_EXPORTER_OTLP_CERTIFICATE" | "OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE" | "OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE" | "OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE" | "OTEL_EXPORTER_OTLP_COMPRESSION" | "OTEL_EXPORTER_OTLP_TRACES_COMPRESSION" | "OTEL_EXPORTER_OTLP_METRICS_COMPRESSION" | "OTEL_EXPORTER_OTLP_LOGS_COMPRESSION" | "OTEL_EXPORTER_OTLP_CLIENT_KEY" | "OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY" | "OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY" | "OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY" | "OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE" | "OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE" | "OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE" | "OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE" | "OTEL_EXPORTER_OTLP_PROTOCOL" | "OTEL_EXPORTER_OTLP_TRACES_PROTOCOL" | "OTEL_EXPORTER_OTLP_METRICS_PROTOCOL" | "OTEL_EXPORTER_OTLP_LOGS_PROTOCOL" | "OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE" | keyof EdotEnv>(name: T): EnvValue<T>;
